/*
Curso de Engenharia de Software - UniEVANGÉLICA
Disciplina: Programação Web
DATA: 15/03/2023
Dev: Luiz Filipe - 2111287
*/

/*
main: Define uma área principal da página que será exibida como um contêiner flex com direção de coluna.

display: Define o tipo de exibição para o elemento.
flex-direction: Define a direção principal dos itens flexíveis no contêiner.
width: Define a largura do elemento principal.
background-image: Define uma imagem de fundo para o elemento principal.
background-size: Define a escala da imagem de fundo para cobrir todo o elemento principal.
min-height: Define a altura mínima do elemento principal.
align-items: Define como os itens flexíveis são alinhados no eixo transversal (verticalmente).
justify-content: Define como os itens flexíveis são alinhados no eixo principal (horizontalmente).
padding: Define o preenchimento do elemento principal.

header: Define um cabeçalho para a página que será exibido como um contêiner flex com elementos alinhados centralmente e espaçados uniformemente.

display: Define o tipo de exibição para o elemento.
align-items: Define como os itens flexíveis são alinhados no eixo transversal (verticalmente).
justify-content: Define como os itens flexíveis são alinhados no eixo principal horizontalmente).
background-color: Define uma cor de fundo para o cabeçalho.
font-size: Define o tamanho da fonte para o texto do cabeçalho.
width: Define a largura do elemento do cabeçalho.
max-width: Define a largura máxima do elemento do cabeçalho.
padding: Define o preenchimento do cabeçalho.
margin: Define a margem do cabeçalho.
border-radius: Define o raio do canto do cabeçalho.

.grid: Define uma grade que exibe vários cartões de jogo.
display: Define o tipo de exibição para o elemento.
grid-template-columns: Define o número e a largura das colunas da grade.
gap: Define o espaço entre os cartões.
width: Define a largura da grade.
max-width: Define a largura máxima da grade.
margin: Define a margem da grade.

.card: Define um cartão de jogo.
aspect-ratio: Define a proporção da altura e largura do cartão.
width: Define a largura do cartão.
height: Define a altura do cartão.
border-radius: Define o raio do canto do cartão.
position: Define a posição do cartão.
transition: Define uma transição suave para o cartão.
transform-style: Define o estilo de transformação do cartão.
background-color: Define a cor de fundo do cartão.

face: Define a face frontal ou traseira do cartão.
width: Define a largura da face.
height: Define a altura da face.
position: Define a posição da face.
*/

main {
    display: flex;
    flex-direction: column;
    width: 100%;
    background-image: url('../images/bg.jpg');
    background-size: cover;
    min-height: 100vh;
    align-items: center;
    justify-content: center;
    padding: 20px 20px 50px;
  }
  
  header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: rgba(255, 255, 255, 0.8);
    font-size: 1.2em;
    width: 100%;
    max-width: 800px;
    padding: 30px;
    margin: 0 0 30px;
    border-radius: 5px;
  }
  
  .grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 15px;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .card {
    aspect-ratio: 3/4;
    width: 100%;
    height: 100%;
    border-radius: 5px;
    position: relative;
    transition: all 400ms ease;
    transform-style: preserve-3d;
    background-color: #ccc;
  }
  
  .face {
    width: 100%;
    height: 100%;
    position: absolute;
    background-size: cover;
    background-position: center;
    border: 5px solid #00b5cc;
    border-radius: 5px;
    transition: all 400ms ease;
  }
  
  .front {
    transform: rotateY(180deg);
  }
  
  .back {
    background-image: url('../images/back.jpg');
    backface-visibility: hidden;
  }
  
  .reveal-card {
    transform: rotateY(180deg);
  }
  
  .disabled-card {
    filter: saturate(0);
    opacity: 0.5;
  }
  
  @media screen and (max-width:920px) {
    .grid {
      grid-template-columns: repeat(5, 1fr);
  
    }
  }